"""empty message

Revision ID: 87e6c4d9e885
Revises:
Create Date: 2025-04-26 16:58:52.041589

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '87e6c4d9e885'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('profile_categories',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=300), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('start_workouts',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('day_number', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('day_number')
    )
    op.create_table('users',
    sa.Column('telegram_id', sa.BigInteger(), nullable=False),
    sa.Column('username', sa.String(length=32), nullable=True),
    sa.Column('first_name', sa.String(length=64), nullable=True),
    sa.Column('last_name', sa.String(length=64), nullable=True),
    sa.Column('e_mail', sa.String(length=100), nullable=True),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', name='gender'), nullable=True),
    sa.Column('level', sa.Enum('FIRST', 'SECOND', 'MINKAIFA', 'COMPETITION', 'START', name='userlevel'), nullable=True),
    sa.Column('role', sa.Enum('ADMIN', 'CURATOR', 'USER', name='userrole'), nullable=False),
    sa.PrimaryKeyConstraint('telegram_id'),
    sa.UniqueConstraint('e_mail'),
    sa.UniqueConstraint('telegram_id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('workouts',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('level', sa.Enum('FIRST', 'SECOND', 'MINKAIFA', 'COMPETITION', 'START', name='userlevel'), nullable=False),
    sa.Column('hashtag', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('biometrics',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('weight', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('birthday', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.telegram_id'], ),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('curator_user',
    sa.Column('curator_id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['curator_id'], ['users.telegram_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.telegram_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('curator_id', 'user_id')
    )
    op.create_table('profile_exercises',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('category_name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=300), nullable=True),
    sa.Column('unit', sa.Enum('KILOGRAMS', 'REPS', 'METERS', 'SECONDS', 'MINUTES', 'CALORIES', 'WATTS', name='measurementunit'), nullable=False),
    sa.Column('result_type', sa.Enum('STM_TIME', 'ASAP_TIME', 'WEIGHT', 'REPS', 'DISTANCE', 'CAPACITY', 'CALORIES', 'COEFFICIENT', name='resulttype'), nullable=False),
    sa.Column('is_time_based', sa.Boolean(), nullable=False),
    sa.Column('is_basic', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['category_name'], ['profile_categories.name'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subscriptions',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('subscription_type', sa.Enum('STANDARD', 'WITH_CURATOR', 'START_PROGRAM', 'ONE_MONTH_START', name='subscriptiontype'), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'FROZEN', 'EXPIRED', 'UNREGISTERED', name='subscriptionstatus'), nullable=False),
    sa.Column('registered_date', sa.Date(), server_default=sa.text('now()'), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('start_program_begin_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.telegram_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('workout_results',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('result', sa.Text(), nullable=False),
    sa.Column('workout_id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.telegram_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['workout_id'], ['workouts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('exercise_standards',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('exercise_id', sa.Integer(), nullable=False),
    sa.Column('user_level', sa.Enum('FIRST', 'SECOND', 'MINKAIFA', 'COMPETITION', 'START', name='userlevel'), nullable=False),
    sa.Column('male_min_value', sa.Float(), nullable=False),
    sa.Column('male_max_value', sa.Float(), nullable=False),
    sa.Column('female_min_value', sa.Float(), nullable=False),
    sa.Column('female_max_value', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['exercise_id'], ['profile_exercises.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('sub_id', sa.BigInteger(), nullable=False),
    sa.Column('sub_type', sa.Enum('STANDARD', 'WITH_CURATOR', 'START_PROGRAM', 'ONE_MONTH_START', name='subscriptiontype'), nullable=False),
    sa.Column('amount', sa.BigInteger(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'COMPLETED', 'FAILED', name='paymentstatus'), nullable=False),
    sa.Column('payment_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['sub_id'], ['subscriptions.user_id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_profile_results',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('exercise_id', sa.Integer(), nullable=False),
    sa.Column('result_value', sa.Float(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['exercise_id'], ['profile_exercises.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.telegram_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_profile_results')
    op.drop_table('payments')
    op.drop_table('exercise_standards')
    op.drop_table('workout_results')
    op.drop_table('subscriptions')
    op.drop_table('profile_exercises')
    op.drop_table('curator_user')
    op.drop_table('biometrics')
    op.drop_table('workouts')
    op.drop_table('users')
    op.drop_table('start_workouts')
    op.drop_table('profile_categories')
    # ### end Alembic commands ###
